<UserControl
    x:Class="TabbyCat.Views.ChatView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:aiChatRequests="clr-namespace:TabbyCat.Models.AiReqRes.AiChatRequests"
    xmlns:controls="clr-namespace:TabbyCat.Controls"
    xmlns:converters="clr-namespace:TabbyCat.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:TabbyCat.Extensions"
    xmlns:fluent="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tabbyCat="clr-namespace:TabbyCat"
    xmlns:viewModels="clr-namespace:TabbyCat.ViewModels"
    xmlns:views="clr-namespace:TabbyCat.Views"
    xmlns:languages="clr-namespace:TabbyCat.Shared.Languages;assembly=TabbyCat.Shared"
    xmlns:models="clr-namespace:TabbyCat.Models"
    xmlns:aiEntities="clr-namespace:TabbyCat.Repository.Entities.AiEntities;assembly=TabbyCat.Repository"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:DataType="viewModels:ChatViewModel"
    Loaded="Control_OnLoaded"
    mc:Ignorable="d">
    <Design.DataContext>
        <viewModels:ChatViewModel />
    </Design.DataContext>
    <Grid Name="mainGrid" RowDefinitions="Auto,*,Auto,Auto">
        <Border IsVisible="{OnPlatform Default=true, Android=false,iOS=false}"
                Background="{DynamicResource SolidBackgroundFillColorTransparent}">
            <Grid Margin="5">
                <ToggleButton IsChecked="True" Classes="icon" Name="chatListToggleBtn" HorizontalAlignment="Left"
                              extensions:IconAttach.Icon="{x:Static tabbyCat:IconFontProvider.Eye}" />
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Foreground="{DynamicResource TextFillColorPrimary}"
                    Text="{OnPlatform Default={x:Static languages:AppResources.Chat} ,
                    iOS={Binding AiChatSession,Converter={converters:OccupationNameConverter}},
                    Android={Binding AiChatSession,Converter={converters:OccupationNameConverter}}
                    }" />
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">

                    <fluent:FontIcon
                        Classes="icon"
                        FontSize="20"
                        IsVisible="{OnPlatform Default=true,Android=false,iOS=false}"
                        Glyph="{x:Static tabbyCat:IconFontProvider.yonghu}"
                        ToolTip.Tip="{x:Static languages:AppResources.Character}" />
                    <TextBlock
                        Margin="5,0,5,0"
                        VerticalAlignment="Center"
                        IsVisible="{OnPlatform Default=true,Android=false,iOS=false}"
                        Text="{Binding AiChatSession, Converter={converters:OccupationNameConverter}}" />

                    <Button
                        Margin="5"
                        extensions:IconAttach.Icon="{x:Static tabbyCat:IconFontProvider.NewChatSession}"
                        Classes="icon"
                        IsVisible="{OnPlatform Default=true,Android=false,iOS=false}"
                        Command="{Binding NewChatSessionCommand}"
                        ToolTip.Tip="{x:Static languages:AppResources.NewSession}" />
                    <!-- <fluent:FontIcon FontFamily="{StaticResource iconFont}" Glyph="&#xe603;" /> -->

                    <Button
                        extensions:IconAttach.Icon="{x:Static tabbyCat:IconFontProvider.FavouriteFolder}"
                        Classes="icon"
                        IsVisible="{OnPlatform Default=true,Android=false,iOS=false}"
                        Command="{Binding OpenFavouriteDialogCommand}"
                        ToolTip.Tip="{x:Static languages:AppResources.OpenFavorites}" />

                    <!-- <Button -->
                    <!--     extensions:IconAttach.Icon="{x:Static tabbyCat:IconFontProvider.ChatPanelSetting}" -->
                    <!--     Classes="icon" -->
                    <!--     Command="{Binding OpenSettingCommand}" -->
                    <!--     ToolTip.Tip="{x:Static languages:AppResources.ChatSetting}" /> -->

                    <Button Classes="icon" extensions:IconAttach.Icon="{x:Static tabbyCat:IconFontProvider.More}">
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuItem Header="{x:Static languages:AppResources.RenameSession}"
                                          Command="{Binding OpenRenameSessionDialogCommand}" />
                                <MenuItem Header="{x:Static languages:AppResources.DeleteConversation}"
                                          Command="{Binding DeleteConversationCommand}" />
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>

                </StackPanel>
            </Grid>
        </Border>

        <controls:MobileTitleBar IsVisible="{OnPlatform Default=true,Windows=false,macOS=false,Linux=false}"
                                 Title="{Binding AiChatSession, Converter={converters:OccupationNameConverter}}"
                                 ShowLeftArrow="True"
                                 LeftArrowCommand="{Binding ReturnPageCommand}" />

        <!--  主要内容  -->

        <DockPanel LastChildFill="True" Grid.Row="1">

            <!-- 列表 -->
            <Grid Width="250" DockPanel.Dock="Left"
                  IsVisible="{Binding ElementName=chatListToggleBtn ,Path=IsChecked}">

                <Border BorderThickness="0,0,1,0">
                    <ScrollViewer>
                        <ListBox
                            SelectedItem="{Binding AiChatSession}"
                            ItemsSource="{Binding ChatList}">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="aiEntities:AiChatSessionEntity">
                                    <controls:SwipeControl>
                                        <DockPanel LastChildFill="True">
                                            <Border DockPanel.Dock="Left" CornerRadius="10" Width="50" Height="50"
                                                    Background="{Binding Occupation,Converter={converters:String2ColorConverter}}">
                                                <TextBlock
                                                    Text="{Binding Occupation,Converter={converters:String2FirstCharConverter}}"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    FontSize="20" Foreground="White" />
                                            </Border>
                                            <Grid RowDefinitions="*,*" DockPanel.Dock="Right" Margin="10,0,0,0">
                                                <TextBlock
                                                    Text="{Binding Path=.,Converter={converters:OccupationNameConverter}}"
                                                    VerticalAlignment="Center" FontWeight="Bold" />
                                                <TextBlock Text="{Binding Header}"
                                                           VerticalAlignment="Center"
                                                           TextTrimming="{x:Static TextTrimming.CharacterEllipsis}"
                                                           Grid.Row="1" />
                                            </Grid>
                                        </DockPanel>
                                        <controls:SwipeControl.SwipeContent>
                                            <Button
                                                Command="{Binding $parent[views:MobileChatListView].((viewModels:MobileChatListViewModel)DataContext).DeleteChatCommand }"
                                                CommandParameter="{Binding .}"
                                                VerticalAlignment="Stretch" Width="80" Padding="0"
                                                Background="OrangeRed"
                                                Foreground="White" BorderThickness="0" Classes="icon"
                                                extensions:IconAttach.Icon="{x:Static tabbyCat:IconFontProvider.Delete}" />
                                        </controls:SwipeControl.SwipeContent>
                                    </controls:SwipeControl>

                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                </Border>


            </Grid>

            <Grid DockPanel.Dock="Right" RowDefinitions="*,Auto,Auto">
                <ScrollViewer Grid.Row="0" Name="sv" IsScrollChainingEnabled="False">
                    <ItemsControl ItemsSource="{Binding ChatModels}" Name="itemsControl"
                                  ScrollViewer.IsScrollChainingEnabled="False">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="aiChatRequests:MessagesItem">
                                <controls:ChatItem Message="{Binding .}"
                                                   FavouriteCommand="{Binding $parent[views:ChatView].((viewModels:ChatViewModel)DataContext).SetFavouriteStateCommand}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>

                <Button Grid.Row="1" HorizontalAlignment="Center" Classes="icon" IsVisible="{Binding IsBusy}"
                        extensions:IconAttach.Icon="{x:Static tabbyCat:IconFontProvider.Stop}"
                        Command="{Binding CancelRequestChatCommand}" />

                <Grid Grid.Row="2" Grid.RowDefinitions="Auto,*">
                    <!--  第一行是类似上传图片的功能按键，第二行是文本输入框，第三行是发送按钮  -->
                    <StackPanel Orientation="Vertical">
                        <!-- 放悬浮的图片 -->
                        <StackPanel Orientation="Horizontal">
                            <ItemsControl ItemsSource="{Binding AppendixModels}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="models:AppendixModel">
                                        <Border>
                                            <ContentControl
                                                ContentTemplate="{StaticResource AppendixDataTemplateSelector}"
                                                Content="{Binding .}" />
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,5">
                            <!--  功能按钮  -->

                        </StackPanel>
                    </StackPanel>
                    <DockPanel Grid.Row="1" LastChildFill="True">
                        <Button
                            Width="80"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            Command="{Binding SendCommand}"
                            Content="{x:Static languages:AppResources.Send}"
                            CornerRadius="0"
                            IsEnabled="{Binding CanSend}"
                            DockPanel.Dock="Right" />

                        <TextBox
                            Height="80"
                            BorderThickness="0,0,0,0"
                            CornerRadius="0"
                            DockPanel.Dock="Left"
                            AcceptsReturn="True"
                            Text="{Binding InputTextContent}"
                            TextWrapping="Wrap">
                            <TextBox.Styles>
                                <Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
                                    <Setter Property="BorderThickness" Value="0,0,0,0" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}" />
                                </Style>
                            </TextBox.Styles>
                            <TextBox.KeyBindings>
                                <KeyBinding Command="{Binding SendCommand}" Gesture="Enter" />
                            </TextBox.KeyBindings>
                            <!-- <i:Interaction.Behaviors> -->
                            <!--     <ia:EventTriggerBehavior EventName="PointerEntered"> -->
                            <!--         <ia:InvokeCommandAction Command="{Binding SendCommand}" /> -->
                            <!--     </ia:EventTriggerBehavior> -->
                            <!-- </i:Interaction.Behaviors> -->
                        </TextBox>
                    </DockPanel>


                </Grid>
            </Grid>
        </DockPanel>


    </Grid>
</UserControl>